[{"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\index.js":"1","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\layouts\\SignIn.js":"2","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\layouts\\SignUp.js":"3","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\layouts\\Home.js":"4","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\NavBar.js":"5","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\content\\DashBoard.js":"6","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\Footer.js":"7","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\content\\EqEnroll.js":"8","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\content\\EqList.js":"9","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\content\\EqDetail.js":"10","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\content\\AdminList.js":"11","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\content\\Profile.js":"12","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\SideBar.js":"13","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\Grid\\GridContainer.js":"14","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\Grid\\GridItem.js":"15","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\Table\\Table.js":"16","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\Table\\ProjectTable.js":"17","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\Table\\EqListTable.js":"18","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\Table\\AdminOkTable.js":"19","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\Table\\AdminTable.js":"20","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\Card\\CardHeader.js":"21","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\Card\\CardFooter.js":"22","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\Card\\Card.js":"23","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\Card\\CardIcon.js":"24","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\Card\\CardBody.js":"25","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\assets\\css\\dashboardStyle.js":"26","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\Typography\\Danger.js":"27","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\Tab\\EqListTab.js":"28","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\Tab\\CustomTabs.js":"29","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\Tab\\AdminTab.js":"30","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\content\\Detail\\EtcDetail.js":"31","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\content\\Detail\\CameraDetail.js":"32","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\content\\Detail\\PcDetail.js":"33","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\content\\Enroll\\CameraEnroll.js":"34","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\content\\Enroll\\EtcEnroll.js":"35","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\content\\Enroll\\PCEnroll.js":"36","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\assets\\css\\customInputStyle.js":"37","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\assets\\css\\customTabsStyle.js":"38","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\assets\\css\\react.js":"39","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\content\\Dialog\\ProjectDialog.js":"40","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\CustomButtons\\Button.js":"41","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\assets\\css\\typographyStyle.js":"42","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\assets\\css\\cardBodyStyle.js":"43","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\assets\\css\\cardIconStyle.js":"44","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\assets\\css\\cardFooterStyle.js":"45","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\assets\\css\\cardStyle.js":"46","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\assets\\css\\cardHeaderStyle.js":"47","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\assets\\css\\tableStyle.js":"48","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\content\\Dialog\\ProjectUpdateDialog.js":"49","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\assets\\css\\buttonStyle.js":"50"},{"size":671,"mtime":1589764194000,"results":"51","hashOfConfig":"52"},{"size":4068,"mtime":1585898837000,"results":"53","hashOfConfig":"52"},{"size":8665,"mtime":1587002785000,"results":"54","hashOfConfig":"52"},{"size":3191,"mtime":1585881711000,"results":"55","hashOfConfig":"52"},{"size":4817,"mtime":1585898775000,"results":"56","hashOfConfig":"52"},{"size":8037,"mtime":1589959547000,"results":"57","hashOfConfig":"52"},{"size":912,"mtime":1585807502000,"results":"58","hashOfConfig":"52"},{"size":2869,"mtime":1585891142000,"results":"59","hashOfConfig":"52"},{"size":9369,"mtime":1589770105000,"results":"60","hashOfConfig":"52"},{"size":3124,"mtime":1585891606000,"results":"61","hashOfConfig":"52"},{"size":4894,"mtime":1587025047000,"results":"62","hashOfConfig":"52"},{"size":8882,"mtime":1587002685000,"results":"63","hashOfConfig":"52"},{"size":4203,"mtime":1585794425000,"results":"64","hashOfConfig":"52"},{"size":651,"mtime":1585191606000,"results":"65","hashOfConfig":"52"},{"size":616,"mtime":1585191606000,"results":"66","hashOfConfig":"52"},{"size":2163,"mtime":1585880094000,"results":"67","hashOfConfig":"52"},{"size":5047,"mtime":1585898968000,"results":"68","hashOfConfig":"52"},{"size":4407,"mtime":1586842189000,"results":"69","hashOfConfig":"52"},{"size":2767,"mtime":1587024981000,"results":"70","hashOfConfig":"52"},{"size":3338,"mtime":1585892034000,"results":"71","hashOfConfig":"52"},{"size":1217,"mtime":1585878624000,"results":"72","hashOfConfig":"52"},{"size":1132,"mtime":1585191208000,"results":"73","hashOfConfig":"52"},{"size":1008,"mtime":1585191189000,"results":"74","hashOfConfig":"52"},{"size":998,"mtime":1585191220000,"results":"75","hashOfConfig":"52"},{"size":976,"mtime":1585191202000,"results":"76","hashOfConfig":"52"},{"size":1695,"mtime":1585544319000,"results":"77","hashOfConfig":"52"},{"size":534,"mtime":1585191313000,"results":"78","hashOfConfig":"52"},{"size":15000,"mtime":1587003187000,"results":"79","hashOfConfig":"52"},{"size":2719,"mtime":1585735351000,"results":"80","hashOfConfig":"52"},{"size":2721,"mtime":1585722049000,"results":"81","hashOfConfig":"52"},{"size":15199,"mtime":1586999847000,"results":"82","hashOfConfig":"52"},{"size":15412,"mtime":1589765358000,"results":"83","hashOfConfig":"52"},{"size":18396,"mtime":1586999850000,"results":"84","hashOfConfig":"52"},{"size":14490,"mtime":1589763732000,"results":"85","hashOfConfig":"52"},{"size":14306,"mtime":1589763733000,"results":"86","hashOfConfig":"52"},{"size":17397,"mtime":1587002528000,"results":"87","hashOfConfig":"52"},{"size":1315,"mtime":1585205524000,"results":"88","hashOfConfig":"52"},{"size":1944,"mtime":1586328877000,"results":"89","hashOfConfig":"52"},{"size":7722,"mtime":1585879427000,"results":"90","hashOfConfig":"52"},{"size":2522,"mtime":1587002594000,"results":"91","hashOfConfig":"52"},{"size":1632,"mtime":1585205477000,"results":"92","hashOfConfig":"52"},{"size":954,"mtime":1585191105000,"results":"93","hashOfConfig":"52"},{"size":298,"mtime":1585191061000,"results":"94","hashOfConfig":"52"},{"size":654,"mtime":1585191121000,"results":"95","hashOfConfig":"52"},{"size":1027,"mtime":1585191129000,"results":"96","hashOfConfig":"52"},{"size":783,"mtime":1585191117000,"results":"97","hashOfConfig":"52"},{"size":2944,"mtime":1585191125000,"results":"98","hashOfConfig":"52"},{"size":1376,"mtime":1585879929000,"results":"99","hashOfConfig":"52"},{"size":2452,"mtime":1585898810000,"results":"100","hashOfConfig":"52"},{"size":8303,"mtime":1585205513000,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"1h6f0z0",{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"104"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"104"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"104"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"104"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"104"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\index.js",[],["208","209","210"],"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\layouts\\SignIn.js",[],"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\layouts\\SignUp.js",[],"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\layouts\\Home.js",[],"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\NavBar.js",[],"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\content\\DashBoard.js",[],"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\content\\EqEnroll.js",["211"],"import React, { useEffect } from \"react\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\n// core components\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomTabs from \"components/Tab/CustomTabs.js\";\n\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\nimport ExplicitIcon from '@material-ui/icons/Explicit';\n\nimport CameraEnroll from 'components/content/Enroll/CameraEnroll';\nimport EtcEnroll from 'components/content/Enroll/EtcEnroll';\nimport PcEnroll from \"components/content/Enroll/PCEnroll\";\n\nimport axios from 'axios';\n\nconst styles = {\n  cardCategoryWhite: {\n    color: \"rgba(255,255,255,.62)\",\n    margin: \"0\",\n    fontSize: \"14px\",\n    marginTop: \"0\",\n    marginBottom: \"0\"\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\"\n  }\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function EqEnroll(props) {\n  const handleSelectTab = () => {\n    switch ({props}.props.match.params.id) {\n      case \"pc\":\n        return 1;\n      case \"etc\":\n        return 2;\n      default:\n        return 0;\n    }\n  }\n\n  const [dataArray, setDataArray] = React.useState({});\n\n  useEffect(() => {\n    axios.get('/projects').then(response => {\n      const temp = {};\n      response.data.forEach(element => {\n        temp[element.project_idx] = element.project_name+ \" - \"+element.project_usage;\n      });\n      setDataArray(temp);\n    }).catch(error => {\n      console.log(error);\n    });\n  },[]);\n\n\n  const classes = useStyles();\n  return (\n    <div>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <CustomTabs\n            selectTab = {handleSelectTab}\n            title=\"카테고리:\"\n            headerColor=\"primary\"\n            tabs={[\n              {\n                tabName: \"카메라 장비\",\n                tabIcon: CameraAltIcon,\n                tabContent: (\n                  <CameraEnroll dataArray={dataArray}/>\n                )\n              },\n              {\n                tabName: \"PC 장비\",\n                tabIcon: DesktopWindowsIcon,\n                tabContent: (\n                  <PcEnroll dataArray={dataArray}/>\n                )\n              },\n              {\n                tabName: \"기타 장비\",\n                tabIcon: ExplicitIcon,\n                tabContent: (\n                  <EtcEnroll dataArray={dataArray}/>\n                )\n              }\n            ]}\n          />\n        </GridItem>\n      </GridContainer>\n    </div>\n  );\n}\n\nEqEnroll.propTypes = {\n  selectTab : PropTypes.number\n};\n","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\content\\EqList.js",["212","213"],"import React, { useEffect } from \"react\";\n// react plugin for creating charts\n// @material-ui/core\nimport { makeStyles } from \"@material-ui/core/styles\";\n// @material-ui/icons\nimport BuildIcon from '@material-ui/icons/Build';\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\nimport ExplicitIcon from '@material-ui/icons/Explicit';\n// core components\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport EqListTable from \"components/Table/EqListTable.js\";\nimport EqListTab from \"components/Tab/EqListTab.js\";\nimport axios from \"axios\"\n\nimport styles from \"assets/css/dashboardStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function EqList() {\n  const [allarray, setAllArray ] = React.useState([]);\n  const [cameraarray, setCameraArray] = React.useState([]);\n  const [pcarray, setPcArray] = React.useState([]);\n  const [etcarray, setEtcArray] = React.useState([]);\n\n  const dataPreProcess = (responseData, order) => {\n    const dataArray = [];\n      responseData.forEach((element,index) => {\n      const temp = []\n      temp.push(index+1+\"\");\n      Object.keys(element).forEach((key, index) => {\n        if( (index === 2 || index === 3 || index === 4 ) && index === element.category_idx+1) {\n          temp.push(element[key]!=null?element[key]+\"\":\"미기재\");\n        } else if(index !== 2 && index !== 3 && index !== 4 && index !== 5 && index !== 7 && index !== 9 && index !== 11 && index !== 14 && index !== 19){\n            if((index === 17 || index === 18) && element[key] !== null) {\n              const tempDate = new Date(element[key]);\n              tempDate.setDate(tempDate.getDate()+1);\n              temp.push(tempDate.getFullYear()+\"-\"+(tempDate.getMonth()+1)+\"-\"+tempDate.getDate());\n            }\n            else {\n              temp.push(element[key]!==null?(element[key]!==\"\"?element[key]+\"\":\"미기재\"):\"미기재\");\n            }\n        }\n      });\n      dataArray.push(temp);\n    });\n\n    if(order !== undefined && order !== '') {\n      const orderObj = { };\n      order.split(',').forEach(element => {\n        if(element !== '') {\n          orderObj[element.split(':')[0]] = element.split(':')[1];\n        }\n      })\n      if(orderObj['orderType'] === '' || orderObj['orderType'] === undefined) { orderObj['orderType'] = 'ASC' }\n      switch(orderObj['orderName']) {\n        case 'ip' : \n          if(orderObj['orderType'] === 'ASC') {\n            dataArray.sort((a,b) => {\n              if(a[3] === \"미기재\" || b[3] === \"미기재\" || a[3] === \"-\" || b[3] === \"-\" || a[3] === \"자동 IP\" || b[3] === \"자동 IP\") { return (a[3].length > b[3].length) ? -1 : 1 }\n              return (a[3].length < b[3].length) ? -1 : 1;\n            });\n          }else {\n            dataArray.sort((a,b) => {\n              return (a[3].length > b[3].length) ? -1 : 1;\n            });\n          }\n          break;\n        case 's_c' : \n          if(orderObj['orderType'] === 'ASC') {\n            dataArray.sort((a,b) => {\n              if(a[2] === \"미기재\" || a[2] === '미정' || b[2] === \"미기재\" || b[2] === '미정') { return a[2] > b[2]? -1 : 1};\n              return (a[2] < b[2]) ? -1 : 1;\n            });\n          }else {\n            dataArray.sort((a,b) => {\n              return (a[2] > b[2]) ? -1 : 1;\n            });\n          }\n          break;\n        case 'location' : \n          if(orderObj['orderType'] === 'ASC') {\n            dataArray.sort((a,b) => {\n              if(a[5] === '미확인' || b[5] === '미확인') { return (a[5].length > b[5].length) ? -1 : 1 }\n              return (a[5] < b[5]) ? -1 : 1;\n            });\n          }else {\n            dataArray.sort((a,b) => {\n              return (a[5] > b[5]) ? -1 : 1;\n            });\n          }\n          break;\n        case 'status' : \n          if(orderObj['orderType'] === 'ASC') {\n            dataArray.sort((a,b) => {\n              if(a[6] === '미정' || b[6] === '미정') { return (a[6] > b[6]) ? -1 : 1 }\n              return (a[6] < b[6]) ? -1 : 1;\n            });\n          }else {\n            dataArray.sort((a,b) => {\n              return (a[6] > b[6]) ? -1 : 1;\n            });\n          }\n          break;\n        case 'project' : \n          if(orderObj['orderType'] === 'ASC') {\n            dataArray.sort((a,b) => {\n              return (a[7] < b[7]) ? -1 : 1;\n            });\n          }else {\n            dataArray.sort((a,b) => {\n              if(a[7] === \"미기재\" || b[7] === \"미기재\") { return (a[7] < b[7]) ? -1 : 1 }\n              return (a[7] > b[7]) ? -1 : 1;\n            });\n          }\n          break;\n        default :\n          break;\n      }\n    }\n    return dataArray;\n  }\n\n  const getListData = (condition) => {\n    if(condition !== null) {\n      axios.get('/equipments?filter='+condition.filter)\n      .then(function(response){\n        setAllArray(dataPreProcess(response.data, condition.order));\n      })\n      .catch(function(error){\n        console.log(error);\n      })\n      axios.get('/equipments?type=1&filter='+condition.filter)\n      .then(function(response){\n        setCameraArray(dataPreProcess(response.data, condition.order));\n      })\n      .catch(function(error){\n        console.log(error);\n      })\n  \n      axios.get('/equipments?type=2&filter='+condition.filter)\n      .then(function(response){\n        setPcArray(dataPreProcess(response.data, condition.order));\n      })\n      .catch(function(error){\n        console.log(error);\n      })\n  \n      axios.get('/equipments?type=3&filter='+condition.filter)\n      .then(function(response){\n        setEtcArray(dataPreProcess(response.data, condition.order));\n      })\n      .catch(function(error){\n        console.log(error);\n      })\n    }else {\n      axios.get('/equipments')\n      .then(function(response){\n        setAllArray(dataPreProcess(response.data));\n      })\n      .catch(function(error){\n        console.log(error);\n      })\n      axios.get('/equipments?type=1')\n      .then(function(response){\n        setCameraArray(dataPreProcess(response.data));\n      })\n      .catch(function(error){\n        console.log(error);\n      })\n  \n      axios.get('/equipments?type=2')\n      .then(function(response){\n        setPcArray(dataPreProcess(response.data));\n      })\n      .catch(function(error){\n        console.log(error);\n      })\n  \n      axios.get('/equipments?type=3')\n      .then(function(response){\n        setEtcArray(dataPreProcess(response.data));\n      })\n      .catch(function(error){\n        console.log(error);\n      })\n    }\n  }\n  \n  useEffect(() => {\n    getListData(null);\n  }, [])\n\n  const handleOnClick = (event) => {\n    const condition = {\n      filter : event.currentTarget.value,\n      order : event.currentTarget.name\n    };\n    getListData(condition);\n  };\n\n  const handleInitOnClick = (event) => {\n    getListData(null);\n  };\n\n  const classes = useStyles();\n  return (\n    <div>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <EqListTab\n            handleOnClick = {handleOnClick}\n            handleInitOnClick = {handleInitOnClick}\n            selectTab={0}\n            title=\"카테고리:\"\n            headerColor=\"primary\"\n            tabs={[\n              {\n                tabName: \"전체 장비\",\n                tabIcon: BuildIcon,\n                tabContent: (\n                  <EqListTable\n                tableHeaderColor=\"primary\"\n                tableHead={[\"번호\", \"S/C\", \"장비 IP\",\"분류\", \"장소\", \"장비 현황\", \"프로젝트\", \"용도\", \"자산 소유\", \"소유주명\", \"입고 날짜\", \"반납날짜\",\"상세보기\",\"삭제\"]}\n                tableData={allarray}\n              />\n                )\n              },\n              {\n                tabName: \"카메라 장비\",\n                tabIcon: CameraAltIcon,\n                tabContent: (\n                  <EqListTable\n                tableHeaderColor=\"primary\"\n                tableHead={[\"번호\", \"S/C\", \"장비 IP\",\"분류\", \"장소\", \"장비 현황\", \"프로젝트\", \"용도\", \"자산 소유\", \"소유주명\", \"입고 날짜\", \"반납날짜\",\"상세보기\",\"삭제\"]}\n                tableData={cameraarray}\n              />\n                )\n              },\n              {\n                tabName: \"PC 장비\",\n                tabIcon: DesktopWindowsIcon,\n                tabContent: (\n                  <EqListTable\n                tableHeaderColor=\"primary\"\n                tableHead={[\"번호\", \"S/C\", \"장비 IP\",\"분류\", \"장소\", \"장비 현황\", \"프로젝트\", \"용도\", \"자산 소유\", \"소유주명\", \"입고 날짜\", \"반납날짜\",\"상세보기\",\"삭제\"]}\n                tableData={pcarray}\n              />\n                )\n              },\n              {\n                tabName: \"기타 장비\",\n                tabIcon: ExplicitIcon,\n                tabContent: (\n                  <EqListTable\n                tableHeaderColor=\"primary\"\n                tableHead={[\"번호\", \"S/C\", \"장비 IP\",\"분류\", \"장소\", \"장비 현황\", \"프로젝트\", \"용도\", \"자산 소유\", \"소유주명\", \"입고 날짜\", \"반납날짜\",\"상세보기\",\"삭제\"]}\n                tableData={etcarray}\n              />\n                )\n              }\n            ]}\n            />\n        </GridItem>\n      </GridContainer>\n    </div>\n  );\n}","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\content\\EqDetail.js",[],"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\content\\AdminList.js",[],"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\content\\Profile.js",[],"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\SideBar.js",[],"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\Grid\\GridContainer.js",[],"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\Grid\\GridItem.js",[],"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\Table\\Table.js",[],"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\Table\\ProjectTable.js",["214"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport {Button, Checkbox, Table, TableHead, TableRow, TableBody, TableCell, Box} from \"@material-ui/core\";\n// core components\nimport styles from \"assets/css/tableStyle.js\";\nimport { blackColor } from \"assets/css/react\";\nimport Dialog from \"components/content/Dialog/ProjectUpdateDialog.js\";\nimport axios from 'axios';\n\nconst useStyles = makeStyles(styles);\n\nconst CustomCheckbox = withStyles({\n    root: {\n      color: blackColor,\n      '&$checked': {\n        color: \"#9c27b0\",\n      },\n    },\n    checked: {},\n  })((props) => <Checkbox color=\"default\" {...props}/>);\n\n\n\nexport default function EqListTable(props) {\n  const classes = useStyles();\n  const { tableHead, tableData, tableHeaderColor} = props;\n  const [checklist, setList] = React.useState('');\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClose = () => { setOpen(false) };\n  const handleOpen = (e) => {\n    setProject_idx(e.currentTarget.id);\n    setProject_name(e.currentTarget.value.split('-')[0]);\n    setProject_usage(e.currentTarget.value.split('-')[1]); \n    setOpen(true)\n  };\n    \n  const [project_name, setProject_name] = React.useState('');\n  const [project_usage, setProject_usage] = React.useState('');\n  const [project_idx, setProject_idx] = React.useState(0);\n  const handleProjectName = e => {setProject_name(e.target.value)};\n  const handleProjectUsage = e => {setProject_usage(e.target.value)};\n\n  \n  const handleOnChecked = e => {\n    if(e.target.checked === true){\n      setList(checklist+\",\"+e.target.id);\n    }else {\n      setList(checklist.replace(','+e.target.id,\"\"));\n    }\n  }\n\n  const handleOnClick = e => {\n    if(window.confirm(\"정말 삭제하시겠습니까?\")) {\n      axios.delete(\"/projects?idxs=\"+checklist)\n        .then(function(response){\n            if(response.data > 0){\n              alert(\"삭제 성공\");\n              window.location.reload();\n            }\n        })\n        .catch(function(error){\n          console.log(error);\n        })\n    } else {\n      return;\n    }\n  }\n\n  return (\n    <div className={classes.tableResponsive}>\n      <Table className={classes.table}>\n        {tableHead !== undefined ? (\n          <TableHead className={classes[tableHeaderColor + \"TableHeader\"]}>\n            <TableRow className={classes.tableHeadRow}>\n              {tableHead.map((prop, key) => {\n                return (\n                  <TableCell\n                    className={classes.tableCell + \" \" + classes.tableHeadCell}\n                    key={key}\n                  >\n                    <h2>{prop}</h2>\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n          </TableHead>\n        ) : null}\n        <TableBody>\n          {tableData.map((props, key) => {\n              return (\n                <TableRow key={key} className={classes.tableBodyRow}>\n                {props.map((prop, key) => {\n                  if(key !== 1) {\n                    return (\n                      <TableCell className={classes.tableCell} key={key}>\n                        <h3>{prop}</h3>\n                      </TableCell>\n                    );\n                  }\n                })}\n                 <TableCell className={classes.tableCell}>\n                    <Button\n                        style={{backgroundColor:\"#9c27b0\" }}\n                        color=\"primary\"\n                        id={props[1]}\n                        value={props[2]+\"-\"+props[3]}\n                        // href={\"/home/equipments/\"+props[1]}\n                        variant=\"contained\"\n                        onClick={handleOpen}\n                        >수정하기\n                    </Button>\n                </TableCell>\n                <TableCell className={classes.tableCell}>\n                    <CustomCheckbox color=\"primary\" id={props[1]} onChange={handleOnChecked}></CustomCheckbox>\n                </TableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n      <Box style={{width:\"99%\"}} display=\"flex\" flexDirection=\"row-reverse\" p={1} m={1}>\n          <Box p={1}>\n            <Button style={{backgroundColor:\"#9c27b0\" }}\n            color=\"primary\"\n            onClick={handleOnClick}\n            variant=\"contained\">삭제하기</Button>\n          </Box>\n      </Box>\n\n      <Dialog Open = {open} handleClose = {handleClose} \n        project_idx={project_idx} project_name={project_name} project_usage={project_usage}\n        handleProjectName={handleProjectName} handleProjectUsage={handleProjectUsage}/>\n    </div>\n  );\n}\n\nEqListTable.defaultProps = {\n  tableHeaderColor: \"gray\"\n};\n\nEqListTable.propTypes = {\n  tableHeaderColor: PropTypes.oneOf([\n    \"warning\",\n    \"primary\",\n    \"danger\",\n    \"success\",\n    \"info\",\n    \"rose\",\n    \"gray\"\n  ]),\n  tableHead: PropTypes.arrayOf(PropTypes.string),\n  tableData: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string))\n};\n","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\Table\\EqListTable.js",["215"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport {Button, Checkbox, Table, TableHead, TableRow, TableBody, TableCell, Box} from \"@material-ui/core\";\n// core components\nimport styles from \"assets/css/tableStyle.js\";\nimport { blackColor } from \"assets/css/react\";\n\nimport axios from 'axios';\n\nconst useStyles = makeStyles(styles);\n\nconst CustomCheckbox = withStyles({\n    root: {\n      color: blackColor,\n      '&$checked': {\n        color: \"#9c27b0\",\n      },\n    },\n    checked: {},\n  })((props) => <Checkbox color=\"default\" {...props}/>);\n\n\n\nexport default function EqListTable(props) {\n  const classes = useStyles();\n  const { tableHead, tableData, tableHeaderColor} = props;\n  const [checklist, setList] = React.useState('');\n\n  const handleOnChecked = e => {\n    if(e.target.checked === true){\n      setList(checklist+\",\"+e.target.id);\n    }else {\n      setList(checklist.replace(','+e.target.id,\"\"));\n    }\n  }\n\n  const handleOnClick = e => {\n    if(window.confirm(\"정말 삭제하시겠습니까?\")) {\n      axios.delete(\"/equipments?idxs=\"+checklist)\n        .then(function(response){\n\n            if(response.data > 0){\n              alert(\"삭제 성공\");\n              window.location.reload();\n            }\n        })\n        .catch(function(error){\n          console.log(error);\n        })\n    } else {\n      return;\n    }\n  }\n\n  return (\n    <div className={classes.tableResponsive}>\n      <Table className={classes.table}>\n        {tableHead !== undefined ? (\n          <TableHead className={classes[tableHeaderColor + \"TableHeader\"]}>\n            <TableRow className={classes.tableHeadRow}>\n              {tableHead.map((prop, key) => {\n                return (\n                  <TableCell\n                    className={classes.tableCell + \" \" + classes.tableHeadCell}\n                    key={key}\n                  >\n                    <h2>{prop}</h2>\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n          </TableHead>\n        ) : null}\n        <TableBody>\n          {tableData.map((props, key) => {\n              return (\n                <TableRow key={key} className={classes.tableBodyRow}>\n                  <TableCell>\n                      <h3>{key+1}</h3>\n                  </TableCell>\n                {props.map((prop, key) => {\n                  if(prop === \"미기재\" || prop === \"미정\" || prop === \"미확인\") {\n                    return (\n                    <TableCell className={classes.tableCell} key={key}>\n                      <h4 style={{color:\"red\"}}>{prop}</h4>\n                    </TableCell>\n                    );\n                  }\n                  else if(key !== 1 && key !== 0) {\n                    return (\n                      <TableCell className={classes.tableCell} key={key}>\n                        <h3>{prop}</h3>\n                      </TableCell>\n                    );\n                  } \n                })}\n                 <TableCell className={classes.tableCell}>\n                    <Button\n                        style={{backgroundColor:\"#9c27b0\" }}\n                        color=\"primary\"\n                        href={\"/home/equipments/\"+props[1]}\n                        variant=\"contained\"\n                        >상세보기\n                    </Button>\n                </TableCell>\n                <TableCell className={classes.tableCell}>\n                    <CustomCheckbox color=\"primary\" id={props[1]} onChange={handleOnChecked}></CustomCheckbox>\n                </TableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n      <Box style={{width:\"99%\"}} display=\"flex\" flexDirection=\"row-reverse\" p={1} m={1}>\n          <Box p={1}>\n            <Button style={{backgroundColor:\"#9c27b0\" }}\n            color=\"primary\"\n            onClick={handleOnClick}\n            variant=\"contained\">삭제하기</Button>\n          </Box>\n      </Box>\n    </div>\n  );\n}\n\nEqListTable.defaultProps = {\n  tableHeaderColor: \"gray\"\n};\n\nEqListTable.propTypes = {\n  tableHeaderColor: PropTypes.oneOf([\n    \"warning\",\n    \"primary\",\n    \"danger\",\n    \"success\",\n    \"info\",\n    \"rose\",\n    \"gray\"\n  ]),\n  tableHead: PropTypes.arrayOf(PropTypes.string),\n  tableData: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string))\n};\n","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\Table\\AdminOkTable.js",["216"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {Button, Table, TableHead, TableRow, TableBody, TableCell} from \"@material-ui/core\";\n// core components\nimport styles from \"assets/css/tableStyle.js\";\n\nimport axios from 'axios';\n\nconst useStyles = makeStyles(styles);\n\nexport default function AdminOkTable(props) {\n  const classes = useStyles();\n  const { tableHead, tableData, tableHeaderColor} = props;\n\n  const handleOnClick = e => {\n    console.log();\n    axios.patch(\"/admin/ok/\"+e.currentTarget.id)\n      .then(function(response){\n        window.location.reload();\n      })\n      .catch(function(error){\n        console.log(error);\n      })\n  }\n\n  return (\n    <div className={classes.tableResponsive}>\n      <Table className={classes.table}>\n        {tableHead !== undefined ? (\n          <TableHead className={classes[tableHeaderColor + \"TableHeader\"]}>\n            <TableRow className={classes.tableHeadRow}>\n              {tableHead.map((prop, key) => {\n                return (\n                  <TableCell\n                    className={classes.tableCell + \" \" + classes.tableHeadCell}\n                    key={key}\n                  >\n                    <h2>{prop}</h2>\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n          </TableHead>\n        ) : null}\n        <TableBody>\n          {tableData.map((prop, key) => {\n              return (\n                <TableRow key={key} className={classes.tableBodyRow}>\n                {prop.map((prop, key) => {\n                  if(key !== 1) {\n                    return (\n                      <TableCell className={classes.tableCell} key={key}>\n                        <h3>{prop}</h3>\n                      </TableCell>\n                    );\n                  }\n                })}\n                <TableCell className={classes.tableCell}>\n                    <Button\n                        id={prop[1]}\n                        style={{backgroundColor:\"#9c27b0\" }}\n                        color=\"primary\"\n                        onClick={handleOnClick}\n                        variant=\"contained\"\n                        >승인하기\n                    </Button>\n                </TableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </div>\n  );\n}\n\nAdminOkTable.defaultProps = {\n  tableHeaderColor: \"gray\"\n};\n\nAdminOkTable.propTypes = {\n  tableHeaderColor: PropTypes.oneOf([\n    \"warning\",\n    \"primary\",\n    \"danger\",\n    \"success\",\n    \"info\",\n    \"rose\",\n    \"gray\"\n  ]),\n  tableHead: PropTypes.arrayOf(PropTypes.string),\n  tableData: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string))\n};\n","C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\Table\\AdminTable.js",[],"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\Card\\CardHeader.js",[],"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\Card\\CardFooter.js",[],"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\Card\\Card.js",[],"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\Card\\CardIcon.js",[],"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\Card\\CardBody.js",[],"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\assets\\css\\dashboardStyle.js",[],"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\Typography\\Danger.js",[],"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\Tab\\EqListTab.js",[],"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\Tab\\CustomTabs.js",[],"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\Tab\\AdminTab.js",[],"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\content\\Detail\\EtcDetail.js",[],"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\content\\Detail\\CameraDetail.js",[],"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\content\\Detail\\PcDetail.js",[],"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\content\\Enroll\\CameraEnroll.js",[],"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\content\\Enroll\\EtcEnroll.js",[],"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\content\\Enroll\\PCEnroll.js",[],"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\assets\\css\\customInputStyle.js",[],"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\assets\\css\\customTabsStyle.js",[],"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\assets\\css\\react.js",[],"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\content\\Dialog\\ProjectDialog.js",[],"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\CustomButtons\\Button.js",[],"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\assets\\css\\typographyStyle.js",[],"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\assets\\css\\cardBodyStyle.js",[],"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\assets\\css\\cardIconStyle.js",[],"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\assets\\css\\cardFooterStyle.js",[],"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\assets\\css\\cardStyle.js",[],"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\assets\\css\\cardHeaderStyle.js",[],"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\assets\\css\\tableStyle.js",[],"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\components\\content\\Dialog\\ProjectUpdateDialog.js",[],"C:\\Users\\tpdls\\IdeaProjects\\demo-master\\frontend\\src\\assets\\css\\buttonStyle.js",[],{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","severity":1,"message":"224","line":68,"column":9,"nodeType":"225","messageId":"226","endLine":68,"endColumn":16},{"ruleId":"227","severity":1,"message":"228","line":193,"column":6,"nodeType":"229","endLine":193,"endColumn":8,"suggestions":"230"},{"ruleId":"223","severity":1,"message":"224","line":207,"column":9,"nodeType":"225","messageId":"226","endLine":207,"endColumn":16},{"ruleId":"231","severity":1,"message":"232","line":96,"column":40,"nodeType":"233","messageId":"234","endLine":96,"endColumn":42},{"ruleId":"231","severity":1,"message":"232","line":83,"column":40,"nodeType":"233","messageId":"234","endLine":83,"endColumn":42},{"ruleId":"231","severity":1,"message":"232","line":51,"column":39,"nodeType":"233","messageId":"234","endLine":51,"endColumn":41},"no-native-reassign",["235"],"no-negated-in-lhs",["236"],"jsx-a11y/accessible-emoji",[],"no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getListData'. Either include it or remove the dependency array.","ArrayExpression",["237"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"238","fix":"239"},"Update the dependencies array to be: [getListData]",{"range":"240","text":"241"},[6575,6577],"[getListData]"]