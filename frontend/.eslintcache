[{"C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\index.js":"1","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\layouts\\SignIn.js":"2","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\layouts\\Home.js":"3","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\layouts\\SignUp.js":"4","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\Footer.js":"5","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\NavBar.js":"6","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\content\\EqEnroll.js":"7","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\content\\ProductList.js":"8","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\content\\DashBoard.js":"9","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\content\\PostList.js":"10","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\content\\AdminList.js":"11","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\content\\EqDetail.js":"12","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\content\\Profile.js":"13","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\SideBar.js":"14","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\Grid\\GridItem.js":"15","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\Grid\\GridContainer.js":"16","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\Tab\\CustomTabs.js":"17","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\Tab\\ProductListTab.js":"18","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\Tab\\AdminTab.js":"19","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\Table\\AdminOkTable.js":"20","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\Table\\AdminTable.js":"21","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\Table\\ProductListTable.js":"22","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\Table\\Table.js":"23","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\Table\\ProjectTable.js":"24","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\Typography\\Danger.js":"25","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\Card\\CardHeader.js":"26","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\Card\\CardBody.js":"27","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\Card\\CardFooter.js":"28","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\assets\\css\\dashboardStyle.js":"29","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\Card\\Card.js":"30","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\Card\\CardIcon.js":"31","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\content\\Detail\\EtcDetail.js":"32","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\content\\Detail\\PcDetail.js":"33","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\content\\Detail\\CameraDetail.js":"34","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\content\\Enroll\\CameraEnroll.js":"35","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\content\\Enroll\\PCEnroll.js":"36","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\content\\Enroll\\EtcEnroll.js":"37","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\assets\\css\\cardIconStyle.js":"38","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\assets\\css\\cardBodyStyle.js":"39","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\assets\\css\\cardStyle.js":"40","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\assets\\css\\cardFooterStyle.js":"41","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\assets\\css\\cardHeaderStyle.js":"42","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\assets\\css\\react.js":"43","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\assets\\css\\typographyStyle.js":"44","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\assets\\css\\tableStyle.js":"45","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\assets\\css\\customInputStyle.js":"46","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\content\\Dialog\\ProjectUpdateDialog.js":"47","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\content\\Dialog\\ProjectDialog.js":"48","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\CustomButtons\\Button.js":"49","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\assets\\css\\customTabsStyle.js":"50","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\assets\\css\\buttonStyle.js":"51"},{"size":673,"mtime":1611226609003,"results":"52","hashOfConfig":"53"},{"size":4193,"mtime":1611235212150,"results":"54","hashOfConfig":"53"},{"size":2743,"mtime":1611240251477,"results":"55","hashOfConfig":"53"},{"size":10025,"mtime":1611235224210,"results":"56","hashOfConfig":"53"},{"size":908,"mtime":1611101129486,"results":"57","hashOfConfig":"53"},{"size":4839,"mtime":1611237495680,"results":"58","hashOfConfig":"53"},{"size":2869,"mtime":1585891142000,"results":"59","hashOfConfig":"53"},{"size":2990,"mtime":1611240587724,"results":"60","hashOfConfig":"53"},{"size":4434,"mtime":1611238270938,"results":"61","hashOfConfig":"53"},{"size":2524,"mtime":1611240706096,"results":"62","hashOfConfig":"53"},{"size":4894,"mtime":1587025047000,"results":"63","hashOfConfig":"53"},{"size":3124,"mtime":1585891606000,"results":"64","hashOfConfig":"53"},{"size":13164,"mtime":1611578154129,"results":"65","hashOfConfig":"53"},{"size":3534,"mtime":1611239366007,"results":"66","hashOfConfig":"53"},{"size":616,"mtime":1585191606000,"results":"67","hashOfConfig":"53"},{"size":651,"mtime":1585191606000,"results":"68","hashOfConfig":"53"},{"size":2719,"mtime":1585735351000,"results":"69","hashOfConfig":"53"},{"size":8118,"mtime":1611240672136,"results":"70","hashOfConfig":"53"},{"size":2721,"mtime":1585722049000,"results":"71","hashOfConfig":"53"},{"size":2767,"mtime":1587024981000,"results":"72","hashOfConfig":"53"},{"size":3338,"mtime":1585892034000,"results":"73","hashOfConfig":"53"},{"size":4422,"mtime":1611240662192,"results":"74","hashOfConfig":"53"},{"size":2163,"mtime":1585880094000,"results":"75","hashOfConfig":"53"},{"size":5047,"mtime":1611240749479,"results":"76","hashOfConfig":"53"},{"size":534,"mtime":1585191313000,"results":"77","hashOfConfig":"53"},{"size":1217,"mtime":1585878624000,"results":"78","hashOfConfig":"53"},{"size":976,"mtime":1585191202000,"results":"79","hashOfConfig":"53"},{"size":1132,"mtime":1585191208000,"results":"80","hashOfConfig":"53"},{"size":1695,"mtime":1585544319000,"results":"81","hashOfConfig":"53"},{"size":1008,"mtime":1585191189000,"results":"82","hashOfConfig":"53"},{"size":998,"mtime":1585191220000,"results":"83","hashOfConfig":"53"},{"size":15199,"mtime":1586999847000,"results":"84","hashOfConfig":"53"},{"size":18396,"mtime":1586999850000,"results":"85","hashOfConfig":"53"},{"size":15412,"mtime":1589765358000,"results":"86","hashOfConfig":"53"},{"size":14490,"mtime":1589763732000,"results":"87","hashOfConfig":"53"},{"size":17397,"mtime":1587002528000,"results":"88","hashOfConfig":"53"},{"size":14306,"mtime":1589763733000,"results":"89","hashOfConfig":"53"},{"size":654,"mtime":1585191121000,"results":"90","hashOfConfig":"53"},{"size":298,"mtime":1585191061000,"results":"91","hashOfConfig":"53"},{"size":783,"mtime":1585191117000,"results":"92","hashOfConfig":"53"},{"size":1027,"mtime":1585191129000,"results":"93","hashOfConfig":"53"},{"size":2944,"mtime":1585191125000,"results":"94","hashOfConfig":"53"},{"size":7722,"mtime":1585879427000,"results":"95","hashOfConfig":"53"},{"size":954,"mtime":1585191105000,"results":"96","hashOfConfig":"53"},{"size":1376,"mtime":1585879929000,"results":"97","hashOfConfig":"53"},{"size":1315,"mtime":1585205524000,"results":"98","hashOfConfig":"53"},{"size":2452,"mtime":1585898810000,"results":"99","hashOfConfig":"53"},{"size":2522,"mtime":1587002594000,"results":"100","hashOfConfig":"53"},{"size":1632,"mtime":1585205477000,"results":"101","hashOfConfig":"53"},{"size":1944,"mtime":1586328877000,"results":"102","hashOfConfig":"53"},{"size":8303,"mtime":1585205513000,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"4krpcx",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"106"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"106"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"106"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"106"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"106"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"106"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"106"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"106"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"106"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"106"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"106"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"106"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"106"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\index.js",[],["221","222"],"C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\layouts\\SignIn.js",[],"C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\layouts\\Home.js",["223","224"],"import React, { useEffect } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container } from '@material-ui/core';\nimport Footer from 'components/Footer.js';\nimport DashBoard from 'components/content/DashBoard.js';\nimport NavBar from 'components/NavBar.js';\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport ProductList from 'components/content/ProductList.js';\nimport PostList from 'components/content/PostList.js';\nimport EqEnroll from 'components/content/EqEnroll.js';\nimport Profile from 'components/content/Profile.js';\nimport EqDetail from 'components/content/EqDetail.js';\nimport AdminList from 'components/content/AdminList.js';\nimport axios from 'axios';\n\nconst switchRoutes = (\n  <Switch>\n    <Route path=\"/home/dashboard\" component={DashBoard} />\n    <Route path=\"/home/profile\" component={Profile}/>\n    <Route path=\"/home/product\" component={EqEnroll}/>\n    <Route path=\"/home/products\" component={ProductList}/>\n    <Route path=\"/home/products/:id\" component={EqDetail}/>\n    <Route path=\"/home/post\" component={EqEnroll}/>\n    <Route path=\"/home/posts\" component={PostList}/>\n    <Route path=\"/home/posts/:id\" component={EqDetail}/>\n    <Route path=\"/home/admin\" component={AdminList}/>\n    <Redirect from=\"/home\" to=\"/home/dashboard\" />\n  </Switch>\n);\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(3),\n  },  \n}));\nexport default function Home({ location, history }) {\n  const classes = useStyles();\n  \n  function NavBarName() {\n    switch (location.pathname.split(\"/\")[2]) {\n      case \"admin\":\n        return \"Admin 회원 관리\";\n      case \"product\":\n        return \"상품 등록\";\n      case \"products\":\n        return \"상품 리스트\";\n      case \"posts\":\n        return \"게시판\";\n      case \"profile\":\n        return \"유저 프로필\";\n      default:\n        return \"현황판\";\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <NavBar themeName = {NavBarName()}/>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container  style={{minHeight:\"100vh\", backgroundColor:\"#fef7e1\"}} maxWidth=\"xl\" className={classes.container}>\n        {/* {\n              (function() {\n                  if(axios.defaults.headers.common['Authorization'] === undefined) {\n                    alert(\"로그인 후 이용해주세요\");\n                    history.push('/signin');\n                  }\n              })()\n          } */}\n          {switchRoutes}\n        </Container>\n        <Footer/>\n      </main>\n    </div>\n  );\n}","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\layouts\\SignUp.js",["225"],"import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { Grid, TextField, Button, Select, Radio, RadioGroup, FormControlLabel, FormControl, FormLabel, FormHelperText\n  , MenuItem, InputLabel, } from '@material-ui/core';\nimport Link from '@material-ui/core/Link';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport bgImg from \"assets/img/cover.jpg\";\n\nimport axios from 'axios';\n\nfunction Copyright() {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright © '}\n        <Link color=\"inherit\" href=\"https://material-ui.com/\">\n            Gaion leejiyeon\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    );\n  }\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    marginTop: theme.spacing(8),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  wrapper: {\n    position: \"relative\",\n    top: \"0\",\n    height: \"100vh\"\n  },\n}));\n\nexport default function SignUp() {\n  const classes = useStyles();\n\n  const [gender, setGender] = React.useState('');\n  const [id,setId] = React.useState('');\n  const [pw,setPw] = React.useState('');\n  const [name,setName] = React.useState('');\n  const [phone,setPhone] = React.useState('');\n  const [email,setEmail] = React.useState('');\n  const [address, setAddress] = React.useState('');\n  const [age, setAge] = React.useState('');\n  const [grade,setGrade] = React.useState('');\n\n  const handleChange = e => { setGender(e.target.value); };\n  const handleChangeId = e => { setId(e.target.value) };\n  const handleChangePw = e => { setPw(e.target.value) };\n  const handleChangeName = e => { setName(e.target.value) };\n  const handleChangePhone = e => { setPhone(e.target.value) };\n  const handleChangeEmail = e => { setEmail(e.target.value) };\n  const handleChangeAddress = e => { setAddress(e.target.value); };\n  const handleChangeAge = e => { setAge(e.target.value); };\n  const handleChangeGrade = e => { setGrade(e.target.value) };\n\n  const handleClick = e => {\n    e.preventDefault();\n    axios.post('/signup', {\n      \"user_id\" : {id}.id,\n      \"user_pw\" : {pw}.pw,\n      \"user_name\" : {name}.name,\n      \"user_email\" : {email}.email,\n      \"user_phone\" : {phone}.phone,\n      \"user_address\" :{address}.address,\n      \"user_age\" : {age}.age,\n      \"user_grade\" : {grade}.grade,\n      \"user_gender\" : {gender}.gender\n    }).then( respose => {\n      if(respose.data.message == \"회원가입 성공\"){\n          alert(\"회원가입 성공\");\n          window.location.href = \"/signin\";\n      }\n    }).catch( error => {\n      console.log(\"회원가입 실패\");\n    })\n  }\n\n  return (\n    <div className={classes.wrapper} style={{backgroundImage: `url(${bgImg})`, backgroundSize:\"cover\"}}>\n    <Container component=\"main\" maxWidth=\"sm\" style={{}}>\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} noValidate>\n              <Grid container spacing={0}>\n                  <Grid item xs={5}>\n                      <TextField\n                          value={id}\n                          onChange={handleChangeId}\n                          variant=\"outlined\"\n                          margin=\"normal\"\n                          required\n                          fullWidth\n                          id=\"id\"\n                          label=\"아이디\"\n                          name=\"id\"\n                          autoComplete=\"id\"\n                      />\n                  </Grid>\n                  <Grid item xs={5} style={{marginLeft:\"3rem\"}}>\n                      <TextField\n                          value={pw}\n                          onChange={handleChangePw}\n                          variant=\"outlined\"\n                          margin=\"normal\"\n                          required\n                          fullWidth\n                          id=\"pw\"\n                          label=\"비밀번호\"\n                          name=\"pw\"\n                          autoComplete=\"pw\"\n                      />\n                  </Grid>\n                  <Grid item xs={3}>\n                      <TextField\n                          value={name}\n                          onChange={handleChangeName}\n                          variant=\"outlined\"\n                          margin=\"normal\"\n                          required\n                          fullWidth\n                          id=\"name\"\n                          label=\"이름\"\n                          name=\"name\"\n                          autoComplete=\"name\"\n                      />\n                  </Grid>\n                  <Grid item xs={6} style={{marginLeft:\"3rem\"}}>\n                      <TextField\n                          value={email}\n                          onChange={handleChangeEmail}\n                          variant=\"outlined\"\n                          margin=\"normal\"\n                          required\n                          fullWidth\n                          id=\"email\"\n                          label=\"이메일 주소\"\n                          name=\"email\"\n                          autoComplete=\"email\"\n                      />\n                  </Grid>\n                  <Grid item xs={4} >\n                      <TextField\n                          value={phone}\n                          onChange={handleChangePhone}\n                          variant=\"outlined\"\n                          margin=\"normal\"\n                          required\n                          fullWidth\n                          id=\"phone\"\n                          label=\"핸드폰 번호\"\n                          name=\"phone\"\n                          autoComplete=\"phone\"\n                      />\n                  </Grid>\n                  <Grid item xs={6} style={{marginLeft:\"3rem\"}}>\n                      <TextField\n                          value={address}\n                          onChange={handleChangeAddress}\n                          variant=\"outlined\"\n                          margin=\"normal\"\n                          required\n                          fullWidth\n                          id=\"address\"\n                          label=\"주소\"\n                          name=\"address\"\n                          autoComplete=\"address\"\n                      />\n                  </Grid>\n                  <Grid item xs={3} >\n                      <TextField\n                          value={age}\n                          onChange={handleChangeAge}\n                          variant=\"outlined\"\n                          margin=\"normal\"\n                          required\n                          fullWidth\n                          id=\"age\"\n                          label=\"나이\"\n                          name=\"age\"\n                          autoComplete=\"age\"\n                      />\n                  </Grid>\n                  <Grid item xs={4} style={{marginLeft:\"3rem\"}}>\n                      <FormControl className={classes.formControl}>\n                          <InputLabel id=\"select-label\">유형</InputLabel>\n                          <Select\n                          labelid=\"select-label\"\n                          id=\"simple-select\"\n                          value={grade}\n                          onChange={handleChangeGrade}\n                          >\n                              <MenuItem value={0}>user</MenuItem>\n                          <MenuItem value={1}>admin</MenuItem>\n                          </Select>\n                          <FormHelperText>가입 유형을 선택해주세요</FormHelperText>\n                      </FormControl>\n                  </Grid>\n                  <Grid item xs={4} style={{marginTop:\"1rem\"}}>\n                      <FormControl component=\"fieldset\">\n                          <FormLabel component=\"legend\" style={{display:\"inline\", marginBottom:\"15px\"}}>성별</FormLabel>\n                          <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\" value={gender} onChange={handleChange}>\n                              <FormControlLabel\n                              value=\"M\"\n                              control={<Radio color=\"primary\" />}\n                              label=\"남자\"\n                              labelPlacement=\"top\"\n                              />\n                              <FormControlLabel\n                              value=\"F\"\n                              control={<Radio color=\"primary\" />}\n                              label=\"여자\"\n                              labelPlacement=\"top\"\n                              />\n                          </RadioGroup>\n                      </FormControl>\n                  </Grid>\n              </Grid>\n          </form>\n          <Button\n          style={{marginTop:\"4rem\"}}\n            type=\"submit\"\n            onClick={handleClick}\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"/signin\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n    </div>\n  );\n}","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\NavBar.js",["226","227"],"import React from 'react';\nimport {Link} from 'react-router-dom';\nimport PropTypes from \"prop-types\";\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {CssBaseline, Drawer, AppBar, Toolbar, Typography, Divider, IconButton } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport SideBar from 'components/SideBar.js';\nimport HomeIcon from '@material-ui/icons/Home';\n// import bgImg from 'assets/img/cover.jpg';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nimport axios from 'axios';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    backgroundColor : \"#fdefc2\",\n    backgroundSize:\"cover\",\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 360,\n  },\n  \n}));\n\nexport default function NavBar(props) {\n\n    const { themeName, loginUser, location, history} = props\n\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(true);\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    const handleOnClick = e => {\n      axios.get(\"/users/logout\")\n      .then((response)=> {\n        window.location.reload();\n      })\n      .catch((error)=>{\n        console.log(error);\n      })\n    }\n\n    return (\n      <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)} style={{backgroundColor:\"#c5e3ad\"}}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h5\" noWrap className={classes.title} style={{color:\"#000000\"}}>\n            {themeName}\n          </Typography>\n          <IconButton onClick={handleOnClick}>\n            Logout\n            <ExitToAppIcon/>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <Link className={classes.cardCategory} style={{textDecoration:\"none\", fontSize:\"10px\", marginRight:\"1.5rem\"}} to=\"/home\">\n            <IconButton style={{marginLeft:\"0\", marginRight:\"auto\", borderRadius:\"0%\"}}>\n              <HomeIcon style={{marginRight:\"1.5rem\"}}/>\n              Gaion Home\n            </IconButton>\n          </Link>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <SideBar loginUser = {loginUser}/>\n      </Drawer>\n      </div>\n    );\n}\n\nNavBar.propTypes = {\n  themeName: PropTypes.string,\n  loginUser : PropTypes.number\n};","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\content\\EqEnroll.js",["228"],"import React, { useEffect } from \"react\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\n// core components\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomTabs from \"components/Tab/CustomTabs.js\";\n\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\nimport ExplicitIcon from '@material-ui/icons/Explicit';\n\nimport CameraEnroll from 'components/content/Enroll/CameraEnroll';\nimport EtcEnroll from 'components/content/Enroll/EtcEnroll';\nimport PcEnroll from \"components/content/Enroll/PCEnroll\";\n\nimport axios from 'axios';\n\nconst styles = {\n  cardCategoryWhite: {\n    color: \"rgba(255,255,255,.62)\",\n    margin: \"0\",\n    fontSize: \"14px\",\n    marginTop: \"0\",\n    marginBottom: \"0\"\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\"\n  }\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function EqEnroll(props) {\n  const handleSelectTab = () => {\n    switch ({props}.props.match.params.id) {\n      case \"pc\":\n        return 1;\n      case \"etc\":\n        return 2;\n      default:\n        return 0;\n    }\n  }\n\n  const [dataArray, setDataArray] = React.useState({});\n\n  useEffect(() => {\n    axios.get('/projects').then(response => {\n      const temp = {};\n      response.data.forEach(element => {\n        temp[element.project_idx] = element.project_name+ \" - \"+element.project_usage;\n      });\n      setDataArray(temp);\n    }).catch(error => {\n      console.log(error);\n    });\n  },[]);\n\n\n  const classes = useStyles();\n  return (\n    <div>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <CustomTabs\n            selectTab = {handleSelectTab}\n            title=\"카테고리:\"\n            headerColor=\"primary\"\n            tabs={[\n              {\n                tabName: \"카메라 장비\",\n                tabIcon: CameraAltIcon,\n                tabContent: (\n                  <CameraEnroll dataArray={dataArray}/>\n                )\n              },\n              {\n                tabName: \"PC 장비\",\n                tabIcon: DesktopWindowsIcon,\n                tabContent: (\n                  <PcEnroll dataArray={dataArray}/>\n                )\n              },\n              {\n                tabName: \"기타 장비\",\n                tabIcon: ExplicitIcon,\n                tabContent: (\n                  <EtcEnroll dataArray={dataArray}/>\n                )\n              }\n            ]}\n          />\n        </GridItem>\n      </GridContainer>\n    </div>\n  );\n}\n\nEqEnroll.propTypes = {\n  selectTab : PropTypes.number\n};\n","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\content\\ProductList.js",["229","230","231","232","233","234","235"],"import React, { useEffect } from \"react\";\n// react plugin for creating charts\n// @material-ui/core\nimport { makeStyles } from \"@material-ui/core/styles\";\n// @material-ui/icons\nimport BuildIcon from '@material-ui/icons/Build';\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\nimport ExplicitIcon from '@material-ui/icons/Explicit';\n// core components\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport ProductListTable from \"components/Table/ProductListTable.js\";\nimport ProductListTab from \"components/Tab/ProductListTab.js\";\nimport axios from \"axios\"\n\nimport styles from \"assets/css/dashboardStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function ProductList({location, history}) {\n  const [clothings, setClothings ] = React.useState([]);\n  const [homeAppliance, setHomeAppliance] = React.useState([]);\n  const [shoes, setShoes] = React.useState([]);\n  const [foods, setFoods] = React.useState([]);\n\n  const classes = useStyles();\n  return (\n    <div>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <ProductListTab\n            selectTab={0}\n            title=\"카테고리:\"\n            headerColor=\"primary\"\n            tabs={[\n              {\n                tabName: \"의류\",\n                tabIcon: BuildIcon,\n                tabContent: (\n                  <ProductListTable\n                tableHeaderColor=\"primary\"\n                tableHead={[\"번호\",\"소분류\",\"상품명\",\"가격\",\"재고\",\"상세보기\",\"삭제\"]}\n                tableData={clothings}\n              />\n                )\n              },\n              {\n                tabName: \"신발\",\n                tabIcon: CameraAltIcon,\n                tabContent: (\n                  <ProductListTable\n                tableHeaderColor=\"primary\"\n                tableHead={[\"번호\",\"소분류\",\"상품명\",\"가격\",\"재고\",\"상세보기\",\"삭제\"]}\n                tableData={shoes}\n              />\n                )\n              },\n              {\n                tabName: \"가전\",\n                tabIcon: DesktopWindowsIcon,\n                tabContent: (\n                  <ProductListTable\n                tableHeaderColor=\"primary\"\n                tableHead={[\"번호\",\"소분류\",\"상품명\",\"가격\",\"재고\",\"상세보기\",\"삭제\"]}\n                tableData={homeAppliance}\n              />\n                )\n              },\n              {\n                tabName: \"음식\",\n                tabIcon: ExplicitIcon,\n                tabContent: (\n                  <ProductListTable\n                tableHeaderColor=\"primary\"\n                tableHead={[\"번호\",\"소분류\",\"상품명\",\"가격\",\"재고\",\"상세보기\",\"삭제\"]}\n                tableData={foods}\n              />\n                )\n              }\n            ]}\n            />\n        </GridItem>\n      </GridContainer>\n    </div>\n  );\n}","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\content\\DashBoard.js",["236","237","238","239","240","241","242","243"],"import React, { useEffect } from \"react\";\n// react plugin for creating charts\n// @material-ui/core\nimport { makeStyles } from \"@material-ui/core/styles\";\n// @material-ui/icons\nimport BuildIcon from '@material-ui/icons/Build';\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\nimport ExplicitIcon from '@material-ui/icons/Explicit';\nimport {Link} from 'react-router-dom';\n\nimport AddBoxIcon from '@material-ui/icons/AddBox';\n// core components\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Table from \"components/Table/Table.js\";\nimport Danger from \"components/Typography/Danger.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardIcon from \"components/Card/CardIcon.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\n\nimport axios from \"axios\"\n\nimport styles from \"assets/css/dashboardStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Dashboard({location, history}) {\n  const [productCount, setProductCount] = React.useState(0);\n  const [postCount, setPostCount] = React.useState(0);\n\n  const [saleLogs, setSaleLog ] = React.useState([]);\n  const [userLogs, setUserLogs] = React.useState([]);\n\n  const classes = useStyles();\n  return (\n    <div>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={6}>\n          <Card>\n            <CardHeader color=\"primary\" stats icon>\n              <CardIcon color=\"primary\">\n                <BuildIcon/>\n              </CardIcon>\n              <p style={{fontSize:\"25px\", color:\"black\"}} className={classes.cardCategory}>전체 상품 현황</p>\n              <h3 style={{fontSize:\"20px\"}} className={classes.cardTitle}>\n                {productCount} <small>개</small>\n              </h3>\n            </CardHeader>\n            <CardFooter stats>\n              <div className={classes.stats}>\n                <Danger>\n                  <AddBoxIcon />\n                  <Link to=\"/home/eqenroll/all\" style={{textDecoration:\"none\", color:\"black\"}}>\n                    <h4 style={{display:\"inline\"}}>상품 등록</h4>\n                  </Link>\n                </Danger>\n              </div>\n            </CardFooter>\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={6}>\n          <Card>\n            <CardHeader color=\"primary\" stats icon>\n              <CardIcon color=\"primary\">\n                <CameraAltIcon />\n              </CardIcon>\n              <p style={{fontSize:\"25px\", color:\"black\"}} className={classes.cardCategory}>게시판 현황</p>\n              <h3 style={{fontSize:\"20px\"}} className={classes.cardTitle}>\n                {postCount} <small>개</small>\n              </h3>\n            </CardHeader>\n            <CardFooter stats>\n              <div className={classes.stats}>\n                <Danger>\n                  <AddBoxIcon />\n                  <Link to=\"/home/eqenroll/camera\" style={{textDecoration:\"none\", color:\"black\"}}>\n                    <h4 style={{display:\"inline\"}}>게시글 등록</h4>\n                  </Link>\n                </Danger>\n              </div>\n            </CardFooter>\n          </Card>\n        </GridItem>\n      </GridContainer>\n     \n      <GridContainer>\n        <GridItem xs={12} sm={12} md={6}>\n          <Card>\n              <CardHeader color=\"primary\">\n                <h4 className={classes.cardTitleWhite}>최근 상품 구입 로그</h4>\n              </CardHeader>\n              <CardBody>\n                <Table\n                  tableHeaderColor=\"primary\"\n                  tableHead={[\"로그번호\", \"구입 상품\", \"요청 시기\"]}\n                  tableData={saleLogs}\n                />\n              </CardBody>\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={6}>\n          <Card>\n            <CardHeader color=\"primary\">\n              <h4 className={classes.cardTitleWhite}>최근 로그인/아웃 로그</h4>\n            </CardHeader>\n            <CardBody>\n              <Table\n                tableHeaderColor=\"primary\"\n                tableHead={[\"아이디\", \"로그인/아웃\", \"날짜\"]}\n                tableData={userLogs}\n              />\n            </CardBody>\n          </Card>\n        </GridItem>\n      </GridContainer>\n    </div>\n  );\n}\n","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\content\\PostList.js",["244","245","246","247","248","249","250"],"import React, { useEffect } from \"react\";\r\n// react plugin for creating charts\r\n// @material-ui/core\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// @material-ui/icons\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\r\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\r\nimport ExplicitIcon from '@material-ui/icons/Explicit';\r\n// core components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport EqListTable from \"components/Table/ProductListTable.js\";\r\nimport EqListTab from \"components/Tab/ProductListTab.js\";\r\nimport axios from \"axios\"\r\n\r\nimport styles from \"assets/css/dashboardStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function PostList({location, history}) {\r\n  const [notice, setNotice ] = React.useState([]);\r\n  const [free, setFree] = React.useState([]);\r\n  const [qa, setQa] = React.useState([]);\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <EqListTab\r\n            selectTab={0}\r\n            title=\"카테고리:\"\r\n            headerColor=\"primary\"\r\n            tabs={[\r\n              {\r\n                tabName: \"공지\",\r\n                tabIcon: BuildIcon,\r\n                tabContent: (\r\n                  <EqListTable\r\n                tableHeaderColor=\"primary\"\r\n                tableHead={[\"번호\",\"제목\",\"작성자\", \"작성일\",\"상세보기\",\"삭제\"]}\r\n                tableData={notice}\r\n              />\r\n                )\r\n              },\r\n              {\r\n                tabName: \"자유\",\r\n                tabIcon: CameraAltIcon,\r\n                tabContent: (\r\n                  <EqListTable\r\n                tableHeaderColor=\"primary\"\r\n                tableHead={[\"번호\",\"제목\",\"작성자\", \"작성일\",\"상세보기\",\"삭제\"]}\r\n                tableData={free}\r\n              />\r\n                )\r\n              },\r\n              {\r\n                tabName: \"질의\",\r\n                tabIcon: DesktopWindowsIcon,\r\n                tabContent: (\r\n                  <EqListTable\r\n                tableHeaderColor=\"primary\"\r\n                tableHead={[\"번호\",\"제목\",\"작성자\", \"작성일\",\"상세보기\",\"삭제\"]}\r\n                tableData={qa}\r\n              />\r\n                )\r\n              }\r\n            ]}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\content\\AdminList.js",[],"C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\content\\EqDetail.js",[],"C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\content\\Profile.js",["251","252"],"import React, { useEffect } from \"react\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport { TextField, Button, Select, Radio, RadioGroup, FormControlLabel, FormControl, FormLabel, FormHelperText\n    , MenuItem, InputLabel, Box} from '@material-ui/core';\nimport axios from 'axios';\nimport Axios from \"axios\";\nimport PropTypes from \"prop-types\";\n\nconst styles = {\n    cardCategoryWhite: {\n        color: \"rgba(255,255,255,.62)\",\n        margin: \"0\",\n        fontSize: \"14px\",\n        marginTop: \"0\",\n        marginBottom: \"0\"\n    },\n    cardTitleWhite: {\n        color: \"#FFFFFF\",\n        marginTop: \"0px\",\n        minHeight: \"auto\",\n        fontWeight: \"300\",\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n        marginBottom: \"3px\",\n        textDecoration: \"none\"\n    }\n};\nconst useStyles = makeStyles(styles);\nexport default function UserProfile({location, history}) {\n    const classes = useStyles();\n\n    console.log(axios.defaults.headers.common['Authorization']);\n\n    const [gender, setGender] = React.useState('');\n\n    const [id,setId] = React.useState('');\n\n    const [pw,setPw] = React.useState('');\n\n    const [name,setName] = React.useState('');\n\n    const [phone,setPhone] = React.useState('');\n\n    const [email,setEmail] = React.useState('');\n\n    const [address, setAddress] = React.useState('');\n\n    const [age, setAge] = React.useState('');\n\n    const [grade,setGrade] = React.useState('');\n\n    const handleChange = e => { setGender(e.target.value) };\n    const handleChangeId = e => { setId(e.target.value) };\n    const handleChangePw = e => { setPw(e.target.value) };\n    const handleChangeName = e => { setName(e.target.value) };\n    const handleChangePhone = e => { setPhone(e.target.value) };\n    const handleChangeEmail = e => { setEmail(e.target.value) };\n    const handleChangeAddress = e => { setAddress(e.target.value); };\n    const handleChangeAge = e => { setAge(e.target.value); };\n    const handleChangeGrade = e => { setGrade(e.target.value) };\n\n    useEffect(() => {\n        Axios.get('/user/profile')\n        .then(function( response){\n            console.log(response);\n            if(response.data.message === \"프로필 정보 조회 성공\") {\n                setId(response.data.user.user_id);\n                setPw(response.data.user.user_pw);\n                setName(response.data.user.user_name);\n                setPhone(response.data.user.user_phone);\n                setEmail(response.data.user.user_email);\n                setAddress(response.data.user.user_address);\n                setAge(response.data.user.user_age);\n                setGrade(response.data.user.user_grade);\n                setGender(response.data.user.user_gender);\n            }\n        })\n        .catch(function(error){\n            console.log(error);\n        })\n    },[]);\n\n    // const handleOnClick = e => {\n    //     e.preventDefault();\n    //     axios.patch('/user/'+idx, {\n    //         \"user_id\" : {id}.id,\n    //         \"user_pw\" : {pw}.pw,\n    //         \"user_name\" : {name}.name,\n    //         \"user_email\" : {email}.email,\n    //         \"user_phone\" : {phone}.phone,\n    //         \"user_address\":{address}.address,\n    //         \"user_age\":{age}.age,\n    //         \"user_grade\" : {grade}.grade,\n    //         \"user_gender\" : {gender}.gender\n    //     }).then( respose => {\n    //         if(respose.data > 0){\n    //             alert(\"프로필 수정 성공\");\n    //             window.location.reload();\n    //             }\n    //         }).catch( error => {\n    //             console.log(error);\n    //             alert(\"프로필 수정 실패\");\n    //         })\n    // }\n\n    // const handleOnClick2 = e => {\n    //     e.preventDefault();\n    //     if(window.confirm(\"정말 탈퇴하시겠습니까?\")) {\n    //         axios.delete('/user/'+idx)\n    //             .then( respose => {\n    //                 if(respose.data > 0){\n    //                     alert(\"탈퇴 성공\");\n    //                     window.location.reload();\n    //                 }\n    //             }).catch( error => {\n    //             console.log(error);\n    //             alert(\"탈퇴 실패\");\n    //         })\n    //     }\n    //     else {\n    //         console.log(\"false\");\n    //     }\n    // }\n    return (\n        <div>\n            <GridContainer>\n                <GridItem xs={12} sm={12} md={8}>\n                    <Card>\n                        <CardHeader color=\"primary\">\n                            <h2 className={classes.cardTitleWhite}>{id}의 프로필</h2>\n                        </CardHeader>\n                        <CardBody>\n                            <GridContainer>\n                                <GridItem xs={6} sm={6} md={3}>\n                                    <TextField\n                                        value={id}\n                                        onChange={handleChangeId}\n                                        margin=\"normal\"\n                                        fullWidth\n                                        id=\"id\"\n                                        label=\"아이디\"\n                                        name=\"id\"\n                                        autoComplete=\"id\"\n                                        disabled\n                                    />\n                                </GridItem>\n                                <GridItem xs={6} sm={6} md={3}>\n                                    <TextField\n                                        type=\"password\"\n                                        value={pw}\n                                        onChange={handleChangePw}\n                                        margin=\"normal\"\n                                        fullWidth\n                                        id=\"pw\"\n                                        label=\"비밀번호\"\n                                        name=\"pw\"\n                                        autoComplete=\"pw\"\n                                    />\n                                </GridItem>\n                            </GridContainer>\n                            <GridContainer>\n                                <GridItem xs={4} sm={4} md={2}>\n                                    <TextField\n                                        value={name}\n                                        onChange={handleChangeName}\n                                        margin=\"normal\"\n                                        fullWidth\n                                        id=\"name\"\n                                        label=\"이름\"\n                                        name=\"name\"\n                                        autoComplete=\"name\"\n                                    />\n                                </GridItem>\n                                <GridItem xs={6} sm={6} md={3}>\n                                    <TextField\n                                        value={phone}\n                                        onChange={handleChangePhone}\n                                        margin=\"normal\"\n                                        required\n                                        fullWidth\n                                        id=\"phone\"\n                                        label=\"핸드폰 번호\"\n                                        name=\"phone\"\n                                        autoComplete=\"phone\"\n                                    />\n                                </GridItem>\n                                <GridItem xs={6} sm={6} md={3}>\n                                    <TextField\n                                        value={address}\n                                        onChange={handleChangeAddress}\n                                        margin=\"normal\"\n                                        required\n                                        fullWidth\n                                        id=\"address\"\n                                        label=\"주소\"\n                                        name=\"address\"\n                                        autoComplete=\"address\"\n                                    />\n                                </GridItem>\n                                <GridItem xs={8} sm={8} md={4}>\n                                    <TextField\n                                        value={email}\n                                        onChange={handleChangeEmail}\n                                        margin=\"normal\"\n                                        fullWidth\n                                        id=\"email\"\n                                        label=\"이메일 주소\"\n                                        name=\"email\"\n                                        autoComplete=\"email\"\n                                    />\n                                </GridItem>\n                            </GridContainer>\n                            <GridContainer>\n                                <GridItem xs={6} sm={6} md={3}>\n                                    <FormControl className={classes.formControl} style={{marginTop : \"35px\"}}>\n                                        <InputLabel id=\"select-label\">유형</InputLabel>\n                                        <Select\n                                            labelid=\"select-label\"\n                                            id=\"simple-select\"\n                                            value={grade}\n                                            onChange={handleChangeGrade}\n                                        >\n                                            <MenuItem value={0}>user</MenuItem>\n                                            <MenuItem value={1}>admin</MenuItem>\n                                        </Select>\n                                        <FormHelperText>가입 유형을 선택해주세요</FormHelperText>\n                                    </FormControl>\n                                </GridItem>\n                                <GridItem xs={12} sm={12} md={4}>\n                                    <FormControl component=\"fieldset\" style={{marginTop : \"35px\"}}>\n                                        <FormLabel component=\"legend\" style={{display:\"inline\", marginBottom:\"15px\"}}>성별</FormLabel>\n                                        <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\" value={gender} onChange={handleChange}>\n                                            <FormControlLabel\n                                                value=\"M\"\n                                                control={<Radio color=\"primary\" />}\n                                                label=\"남자\"\n                                                labelPlacement=\"top\"\n                                            />\n                                            <FormControlLabel\n                                                value=\"F\"\n                                                control={<Radio color=\"primary\" />}\n                                                label=\"여자\"\n                                                labelPlacement=\"top\"\n                                            />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </GridItem>\n                                <GridItem xs={6} sm={6} md={3}>\n                                    <TextField\n                                        value={age}\n                                        onChange={handleChangeAge}\n                                        margin=\"normal\"\n                                        fullWidth\n                                        id=\"age\"\n                                        label=\"나이\"\n                                        name=\"age\"\n                                        autoComplete=\"age\"\n                                    />\n                                </GridItem>\n                            </GridContainer>\n                        </CardBody>\n                        <CardFooter>\n                            <Box style={{width:\"100%\"}} display=\"flex\" flexDirection=\"row\" p={1} m={1}>\n                                <Box p={1}>\n                                    {/* <Button style={{backgroundColor:\"#9c27b0\", color:\"white\"}} color=\"primary\" onClick={handleOnClick}>프로필 수정</Button>\n                                    <Button style={{backgroundColor:\"#9c27b0\", color:\"white\", marginLeft:\"2rem\"}} color=\"primary\" onClick={handleOnClick2}>회원 탈퇴</Button> */}\n                                </Box>\n                            </Box>\n                        </CardFooter>\n                    </Card>\n                </GridItem>\n            </GridContainer>\n        </div>\n    );\n}","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\SideBar.js",["253","254","255","256","257"],"import React from 'react';\nimport {Link} from 'react-router-dom';\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport {ListItem, ListItemIcon, ListItemText, List, Collapse, Divider} from '@material-ui/core';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BuildIcon from '@material-ui/icons/Build';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport PersonIcon from '@material-ui/icons/Person';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n    },\n  }));\n\nexport default function SideBar(props) {\n    const classes = useStyles();\n    const [openUser, setOpenUser] = React.useState(true);\n\n    const {loginUser, location, history} = props;\n\n    const handleClickUser = () => {\n        setOpenUser(!openUser);\n    };\n    return(\n        <div>\n            \n            <ListItem button component={Link} to=\"/home/dashboard\">\n            <ListItemIcon>\n                <DashboardIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"현황\"/>\n            </ListItem>\n            <Divider />\n            <ListItem button component={Link} to=\"/home/products\">\n            <ListItemIcon>\n                <DashboardIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"상품 리스트\"/>\n            </ListItem>\n            <ListItem button component={Link} to=\"/home/posts\">\n            <ListItemIcon>\n                <DashboardIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"게시판\"/>\n            </ListItem>\n            <Divider />\n            {\n              (function() {\n                  if(loginUser === -1) \n                    return (            \n                    <ListItem button component={Link} to=\"/home/admin\" >\n                    <ListItemIcon>\n                        <PeopleIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Admin\" />\n                    </ListItem>);\n                  else {\n                    return (            \n                    <div>\n                    <ListItem button onClick={handleClickUser}>\n                        <ListItemIcon>\n                            <PeopleIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"유저\" />\n                        {openUser ? <ExpandLess /> : <ExpandMore />}\n                        </ListItem>\n                    <Collapse in={openUser} timeout=\"auto\" unmountOnExit>\n                        <List component=\"div\" disablePadding>\n                        <ListItem button className={classes.nested} component={Link} to=\"/home/profile\">\n                            <ListItemIcon>\n                            <PersonIcon />\n                            </ListItemIcon>\n                            <ListItemText primary=\"유저 프로필\" />\n                        </ListItem>\n                        </List>\n                    </Collapse>\n                    </div>\n                        );\n                  }  \n              })()\n          }\n          <Divider />\n        </div>\n    );\n};\n\nSideBar.propTypes = {\n    loginUser : PropTypes.number,\n  };","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\Grid\\GridItem.js",[],"C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\Grid\\GridContainer.js",[],"C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\Tab\\CustomTabs.js",[],"C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\Tab\\ProductListTab.js",["258","259"],"import React, {useEffect} from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n\n// material-ui components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Tab, Tabs, TextField, Select, FormControl, FormHelperText, MenuItem, InputLabel, Button} from \"@material-ui/core\";\nimport GridItem from \"components/Grid/GridItem\";\nimport GridContainer from \"components/Grid/GridContainer\";\n// core components\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport { whiteColor } from \"assets/css/react.js\";\nimport styles from \"assets/css/customTabsStyle.js\";\n\nimport axios from \"axios\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function ProductListTabs(props) {\n  const classes = useStyles();\n  const { headerColor, plainTabs, tabs, title, rtlActive, selectTab, handleOnClick, handleInitOnClick} = props;\n  const cardTitle = classNames({\n    [classes.cardTitle]: true,\n    [classes.cardTitleRTL]: rtlActive\n  });\n\n\n  const [value, setValue] = React.useState(selectTab);\n  const handleChange = (event, value) => {\n    setValue(value);\n  };\n\n  const [searchFilter, setSearchFilter] = React.useState(\"\");\n  const [searchName, setSearchName] = React.useState(\"\");\n\n  const [name, setName] = React.useState('');\n\n  const [orderName, setOrderName] = React.useState('');\n  const [orderType, setOrderType] = React.useState('');\n\n  var temp = \"\";\n\n  const handleChangeFilter = (e) => {\n    switch (e.currentTarget.id) {\n      case \"orderName\" :\n        temp = \"\";\n        searchName.split(',').forEach((item) => {\n          if(item.indexOf('orderName')!== 0 && item !== \"\") {\n            temp += item+\",\";\n          }\n        });\n        if(e.target.value === '선택 취소') { setOrderName(''); }\n        else { setOrderName(e.target.value); }\n        setSearchName(temp+\"orderName:\"+e.target.value+\",\");\n        break;\n      case \"orderType\" :\n        temp = \"\";\n        searchName.split(',').forEach((item) => {\n          if(item.indexOf('orderType')!== 0 && item !== \"\") {\n            temp += item+\",\";\n          }\n        });\n        if(e.target.value === '선택 취소') setOrderType('');\n        else setOrderType(e.target.value);\n        setSearchName(temp+\"orderType:\"+e.target.value+\",\");\n        break;\n      default:\n        temp = \"\";\n        searchFilter.split(',').forEach((item) => {\n          if(item.indexOf('name')!== 0 && item !== \"\") {\n            temp += item+\",\";\n          }\n        });\n        if(e.target.value === '') setSearchFilter(temp);\n        else setSearchFilter(temp+\"name:\"+e.target.value+\",\");\n        setName(e.target.value);\n        break;\n    }\n  }\n\n  return (\n    <Card plain={plainTabs}>\n      <CardHeader color={headerColor} plain={plainTabs}>\n        {title !== undefined ? <div className={cardTitle}>{title}</div> : null}\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          classes={{\n            root: classes.tabsRoot,\n            indicator: classes.displayNone,\n            scrollButtons: classes.displayNone\n          }}\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n        >\n          {tabs.map((prop, key) => {\n            var icon = {};\n            if (prop.tabIcon) {\n              icon = {\n                icon: <prop.tabIcon />\n              };\n            }\n            return (\n              <Tab\n                classes={{\n                  root: classes.tabRootButton,\n                  selected: classes.tabSelected,\n                  wrapper: classes.tabWrapper\n                }}\n                key={key}\n                label={prop.tabName}\n                {...icon}\n              />\n            );\n          })}\n        </Tabs>\n        <div className={classes.filterTitle}>필터</div>\n        <GridContainer className={classes.tabsRoot}>\n          <GridItem xs={6} sm={6} md={2} className={classes.tabRootButton}>\n            <TextField\n              value={name}\n              onChange={handleChangeFilter}\n              label=\"상품명 검색\"\n              id=\"name\"\n              fullWidth\n              margin=\"none\"\n              required\n              name=\"name\"\n              autoComplete=\"name\"\n              InputProps={{\n                style : { color : whiteColor},\n                className : classes.select\n              }}\n              InputLabelProps={{\n                style : {color : whiteColor}\n              }}\n            />\n          </GridItem>\n          <GridItem xs={4} sm={4} md={2}>\n            <FormControl className={classes.formControl} fullWidth>\n              <InputLabel style={{color:whiteColor}} id=\"select-orderName-label\">정렬 조건</InputLabel>\n              <Select\n              className={classes.select}\n              value={orderName}\n              onChange={handleChangeFilter}\n              labelid=\"select-orderName-label\"\n              id=\"orderName-select\"\n              inputProps={{\n                  classes : {\n                    icon : classes.icon,\n                  },\n              }}\n              >\n              <MenuItem id=\"orderName\" value={'선택 취소'}>선택 취소</MenuItem>\n              <MenuItem id=\"orderName\" value={'idx'}>번호</MenuItem>\n              <MenuItem id=\"orderName\" value={'subcategory'}>소분류</MenuItem>\n              <MenuItem id=\"orderName\" value={'price'}>가격</MenuItem>\n              <MenuItem id=\"orderName\" value={'stock'}>재고</MenuItem>\n              </Select>\n              <FormHelperText style={{color:whiteColor}}>정렬 조건</FormHelperText>\n              </FormControl>\n          </GridItem>\n          <GridItem xs={4} sm={4} md={2}>\n            <FormControl className={classes.formControl} fullWidth>\n              <InputLabel style={{color:whiteColor}} id=\"select-orderType-label\">정렬 방식</InputLabel>\n              <Select\n              className={classes.select}\n              value={orderType}\n              onChange={handleChangeFilter}\n              labelid=\"select-orderType-label\"\n              id=\"orderType-select\"\n              inputProps={{\n                  classes : {\n                    icon : classes.icon,\n                  },\n              }}\n              >\n              <MenuItem id=\"orderType\" value={'선택 취소'}>선택 취소</MenuItem>\n              <MenuItem id=\"orderType\" value={'ASC'}>오름차순</MenuItem>\n              <MenuItem id=\"orderType\" value={'DESC'}>내림차순</MenuItem>\n              </Select>\n              <FormHelperText style={{color:whiteColor}}>오름차순/내림차순</FormHelperText>\n              </FormControl>\n          </GridItem>\n          <GridItem xs={2} sm={2} md={2} className={classes.tabRootButton}>\n          </GridItem>\n          <GridItem className={classes.tabRootButton}>\n            <Button variant=\"outlined\" style={{color:whiteColor}} onClick={handleInitOnClick}>결과 초기화</Button>\n          </GridItem>\n          <GridItem xs={2} sm={2} md={1} className={classes.tabRootButton}>\n            <Button variant=\"outlined\" style={{color:whiteColor}} onClick={handleOnClick} value={searchFilter} name={searchName}>검색</Button>\n          </GridItem>\n        </GridContainer>\n      </CardHeader>\n      <CardBody>\n        {tabs.map((prop, key) => {\n          if (key === value) {\n            return <div key={key}>{prop.tabContent}</div>;\n          }\n          return null;\n        })}\n      </CardBody>\n    </Card>\n  );\n}\n\nProductListTabs.propTypes = {\n  selectTab : PropTypes.number,\n  headerColor: PropTypes.oneOf([\n    \"warning\",\n    \"success\",\n    \"danger\",\n    \"info\",\n    \"primary\",\n    \"rose\"\n  ]),\n  title: PropTypes.string,\n  tabs: PropTypes.arrayOf(\n    PropTypes.shape({\n      tabName: PropTypes.string.isRequired,\n      tabIcon: PropTypes.object,\n      tabContent: PropTypes.node.isRequired\n    })\n  ),\n  rtlActive: PropTypes.bool,\n  plainTabs: PropTypes.bool,\n  handleOnClick : PropTypes.func,\n  handleInitOnClick : PropTypes.func,\n};\n","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\Tab\\AdminTab.js",[],"C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\Table\\AdminOkTable.js",["260"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {Button, Table, TableHead, TableRow, TableBody, TableCell} from \"@material-ui/core\";\n// core components\nimport styles from \"assets/css/tableStyle.js\";\n\nimport axios from 'axios';\n\nconst useStyles = makeStyles(styles);\n\nexport default function AdminOkTable(props) {\n  const classes = useStyles();\n  const { tableHead, tableData, tableHeaderColor} = props;\n\n  const handleOnClick = e => {\n    console.log();\n    axios.patch(\"/admin/ok/\"+e.currentTarget.id)\n      .then(function(response){\n        window.location.reload();\n      })\n      .catch(function(error){\n        console.log(error);\n      })\n  }\n\n  return (\n    <div className={classes.tableResponsive}>\n      <Table className={classes.table}>\n        {tableHead !== undefined ? (\n          <TableHead className={classes[tableHeaderColor + \"TableHeader\"]}>\n            <TableRow className={classes.tableHeadRow}>\n              {tableHead.map((prop, key) => {\n                return (\n                  <TableCell\n                    className={classes.tableCell + \" \" + classes.tableHeadCell}\n                    key={key}\n                  >\n                    <h2>{prop}</h2>\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n          </TableHead>\n        ) : null}\n        <TableBody>\n          {tableData.map((prop, key) => {\n              return (\n                <TableRow key={key} className={classes.tableBodyRow}>\n                {prop.map((prop, key) => {\n                  if(key !== 1) {\n                    return (\n                      <TableCell className={classes.tableCell} key={key}>\n                        <h3>{prop}</h3>\n                      </TableCell>\n                    );\n                  }\n                })}\n                <TableCell className={classes.tableCell}>\n                    <Button\n                        id={prop[1]}\n                        style={{backgroundColor:\"#9c27b0\" }}\n                        color=\"primary\"\n                        onClick={handleOnClick}\n                        variant=\"contained\"\n                        >승인하기\n                    </Button>\n                </TableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </div>\n  );\n}\n\nAdminOkTable.defaultProps = {\n  tableHeaderColor: \"gray\"\n};\n\nAdminOkTable.propTypes = {\n  tableHeaderColor: PropTypes.oneOf([\n    \"warning\",\n    \"primary\",\n    \"danger\",\n    \"success\",\n    \"info\",\n    \"rose\",\n    \"gray\"\n  ]),\n  tableHead: PropTypes.arrayOf(PropTypes.string),\n  tableData: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string))\n};\n","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\Table\\AdminTable.js",[],"C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\Table\\ProductListTable.js",["261"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport {Button, Checkbox, Table, TableHead, TableRow, TableBody, TableCell, Box} from \"@material-ui/core\";\n// core components\nimport styles from \"assets/css/tableStyle.js\";\nimport { blackColor } from \"assets/css/react\";\n\nimport axios from 'axios';\n\nconst useStyles = makeStyles(styles);\n\nconst CustomCheckbox = withStyles({\n    root: {\n      color: blackColor,\n      '&$checked': {\n        color: \"#9c27b0\",\n      },\n    },\n    checked: {},\n  })((props) => <Checkbox color=\"default\" {...props}/>);\n\n\n\nexport default function ProductListTable(props) {\n  const classes = useStyles();\n  const { tableHead, tableData, tableHeaderColor} = props;\n  const [checklist, setList] = React.useState('');\n\n  const handleOnChecked = e => {\n    if(e.target.checked === true){\n      setList(checklist+\",\"+e.target.id);\n    }else {\n      setList(checklist.replace(','+e.target.id,\"\"));\n    }\n  }\n\n  const handleOnClick = e => {\n    if(window.confirm(\"정말 삭제하시겠습니까?\")) {\n      axios.delete(\"/equipments?idxs=\"+checklist)\n        .then(function(response){\n\n            if(response.data > 0){\n              alert(\"삭제 성공\");\n              window.location.reload();\n            }\n        })\n        .catch(function(error){\n          console.log(error);\n        })\n    } else {\n      return;\n    }\n  }\n\n  return (\n    <div className={classes.tableResponsive}>\n      <Table className={classes.table}>\n        {tableHead !== undefined ? (\n          <TableHead className={classes[tableHeaderColor + \"TableHeader\"]}>\n            <TableRow className={classes.tableHeadRow}>\n              {tableHead.map((prop, key) => {\n                return (\n                  <TableCell\n                    className={classes.tableCell + \" \" + classes.tableHeadCell}\n                    key={key}\n                  >\n                    <h2>{prop}</h2>\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n          </TableHead>\n        ) : null}\n        <TableBody>\n          {tableData.map((props, key) => {\n              return (\n                <TableRow key={key} className={classes.tableBodyRow}>\n                  <TableCell>\n                      <h3>{key+1}</h3>\n                  </TableCell>\n                {props.map((prop, key) => {\n                  if(prop === \"미기재\" || prop === \"미정\" || prop === \"미확인\") {\n                    return (\n                    <TableCell className={classes.tableCell} key={key}>\n                      <h4 style={{color:\"red\"}}>{prop}</h4>\n                    </TableCell>\n                    );\n                  }\n                  else if(key !== 1 && key !== 0) {\n                    return (\n                      <TableCell className={classes.tableCell} key={key}>\n                        <h3>{prop}</h3>\n                      </TableCell>\n                    );\n                  } \n                })}\n                 <TableCell className={classes.tableCell}>\n                    <Button\n                        style={{backgroundColor:\"#9c27b0\" }}\n                        color=\"primary\"\n                        href={\"/home/equipments/\"+props[1]}\n                        variant=\"contained\"\n                        >상세보기\n                    </Button>\n                </TableCell>\n                <TableCell className={classes.tableCell}>\n                    <CustomCheckbox color=\"primary\" id={props[1]} onChange={handleOnChecked}></CustomCheckbox>\n                </TableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n      <Box style={{width:\"99%\"}} display=\"flex\" flexDirection=\"row-reverse\" p={1} m={1}>\n          <Box p={1}>\n            <Button style={{backgroundColor:\"#9c27b0\" }}\n            color=\"primary\"\n            onClick={handleOnClick}\n            variant=\"contained\">삭제하기</Button>\n          </Box>\n      </Box>\n    </div>\n  );\n}\n\nProductListTable.defaultProps = {\n  tableHeaderColor: \"gray\"\n};\n\nProductListTable.propTypes = {\n  tableHeaderColor: PropTypes.oneOf([\n    \"warning\",\n    \"primary\",\n    \"danger\",\n    \"success\",\n    \"info\",\n    \"rose\",\n    \"gray\"\n  ]),\n  tableHead: PropTypes.arrayOf(PropTypes.string),\n  tableData: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string))\n};\n","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\Table\\Table.js",[],"C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\Table\\ProjectTable.js",["262"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport {Button, Checkbox, Table, TableHead, TableRow, TableBody, TableCell, Box} from \"@material-ui/core\";\n// core components\nimport styles from \"assets/css/tableStyle.js\";\nimport { blackColor } from \"assets/css/react\";\nimport Dialog from \"components/content/Dialog/ProjectUpdateDialog.js\";\nimport axios from 'axios';\n\nconst useStyles = makeStyles(styles);\n\nconst CustomCheckbox = withStyles({\n    root: {\n      color: blackColor,\n      '&$checked': {\n        color: \"#9c27b0\",\n      },\n    },\n    checked: {},\n  })((props) => <Checkbox color=\"default\" {...props}/>);\n\n\n\nexport default function EqListTable(props) {\n  const classes = useStyles();\n  const { tableHead, tableData, tableHeaderColor} = props;\n  const [checklist, setList] = React.useState('');\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClose = () => { setOpen(false) };\n  const handleOpen = (e) => {\n    setProject_idx(e.currentTarget.id);\n    setProject_name(e.currentTarget.value.split('-')[0]);\n    setProject_usage(e.currentTarget.value.split('-')[1]); \n    setOpen(true)\n  };\n    \n  const [project_name, setProject_name] = React.useState('');\n  const [project_usage, setProject_usage] = React.useState('');\n  const [project_idx, setProject_idx] = React.useState(0);\n  const handleProjectName = e => {setProject_name(e.target.value)};\n  const handleProjectUsage = e => {setProject_usage(e.target.value)};\n\n  \n  const handleOnChecked = e => {\n    if(e.target.checked === true){\n      setList(checklist+\",\"+e.target.id);\n    }else {\n      setList(checklist.replace(','+e.target.id,\"\"));\n    }\n  }\n\n  const handleOnClick = e => {\n    if(window.confirm(\"정말 삭제하시겠습니까?\")) {\n      axios.delete(\"/projects?idxs=\"+checklist)\n        .then(function(response){\n            if(response.data > 0){\n              alert(\"삭제 성공\");\n              window.location.reload();\n            }\n        })\n        .catch(function(error){\n          console.log(error);\n        })\n    } else {\n      return;\n    }\n  }\n\n  return (\n    <div className={classes.tableResponsive}>\n      <Table className={classes.table}>\n        {tableHead !== undefined ? (\n          <TableHead className={classes[tableHeaderColor + \"TableHeader\"]}>\n            <TableRow className={classes.tableHeadRow}>\n              {tableHead.map((prop, key) => {\n                return (\n                  <TableCell\n                    className={classes.tableCell + \" \" + classes.tableHeadCell}\n                    key={key}\n                  >\n                    <h2>{prop}</h2>\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n          </TableHead>\n        ) : null}\n        <TableBody>\n          {tableData.map((props, key) => {\n              return (\n                <TableRow key={key} className={classes.tableBodyRow}>\n                {props.map((prop, key) => {\n                  if(key !== 1) {\n                    return (\n                      <TableCell className={classes.tableCell} key={key}>\n                        <h3>{prop}</h3>\n                      </TableCell>\n                    );\n                  }\n                })}\n                 <TableCell className={classes.tableCell}>\n                    <Button\n                        style={{backgroundColor:\"#9c27b0\" }}\n                        color=\"primary\"\n                        id={props[1]}\n                        value={props[2]+\"-\"+props[3]}\n                        // href={\"/home/equipments/\"+props[1]}\n                        variant=\"contained\"\n                        onClick={handleOpen}\n                        >수정하기\n                    </Button>\n                </TableCell>\n                <TableCell className={classes.tableCell}>\n                    <CustomCheckbox color=\"primary\" id={props[1]} onChange={handleOnChecked}></CustomCheckbox>\n                </TableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n      <Box style={{width:\"99%\"}} display=\"flex\" flexDirection=\"row-reverse\" p={1} m={1}>\n          <Box p={1}>\n            <Button style={{backgroundColor:\"#9c27b0\" }}\n            color=\"primary\"\n            onClick={handleOnClick}\n            variant=\"contained\">삭제하기</Button>\n          </Box>\n      </Box>\n\n      <Dialog Open = {open} handleClose = {handleClose} \n        project_idx={project_idx} project_name={project_name} project_usage={project_usage}\n        handleProjectName={handleProjectName} handleProjectUsage={handleProjectUsage}/>\n    </div>\n  );\n}\n\nEqListTable.defaultProps = {\n  tableHeaderColor: \"gray\"\n};\n\nEqListTable.propTypes = {\n  tableHeaderColor: PropTypes.oneOf([\n    \"warning\",\n    \"primary\",\n    \"danger\",\n    \"success\",\n    \"info\",\n    \"rose\",\n    \"gray\"\n  ]),\n  tableHead: PropTypes.arrayOf(PropTypes.string),\n  tableData: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string))\n};\n","C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\Typography\\Danger.js",[],"C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\Card\\CardHeader.js",[],"C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\Card\\CardBody.js",[],"C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\Card\\CardFooter.js",[],"C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\assets\\css\\dashboardStyle.js",[],"C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\Card\\Card.js",[],"C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\Card\\CardIcon.js",[],"C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\content\\Detail\\EtcDetail.js",[],"C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\content\\Detail\\PcDetail.js",[],"C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\content\\Detail\\CameraDetail.js",[],"C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\content\\Enroll\\CameraEnroll.js",[],"C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\content\\Enroll\\PCEnroll.js",[],"C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\content\\Enroll\\EtcEnroll.js",[],"C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\assets\\css\\cardIconStyle.js",[],"C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\assets\\css\\cardBodyStyle.js",[],"C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\assets\\css\\cardStyle.js",[],"C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\assets\\css\\cardFooterStyle.js",[],"C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\assets\\css\\cardHeaderStyle.js",[],"C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\assets\\css\\react.js",[],"C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\assets\\css\\typographyStyle.js",[],"C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\assets\\css\\tableStyle.js",[],"C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\assets\\css\\customInputStyle.js",[],"C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\content\\Dialog\\ProjectUpdateDialog.js",[],["263","264"],"C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\content\\Dialog\\ProjectDialog.js",[],"C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\components\\CustomButtons\\Button.js",[],"C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\assets\\css\\customTabsStyle.js",[],"C:\\Users\\PC\\ideaProjects\\gaion_webproject-master2\\frontend\\src\\assets\\css\\buttonStyle.js",[],{"ruleId":"265","replacedBy":"266"},{"ruleId":"267","replacedBy":"268"},{"ruleId":"269","severity":1,"message":"270","line":1,"column":17,"nodeType":"271","messageId":"272","endLine":1,"endColumn":26},{"ruleId":"269","severity":1,"message":"273","line":14,"column":8,"nodeType":"271","messageId":"272","endLine":14,"endColumn":13},{"ruleId":"274","severity":1,"message":"275","line":90,"column":31,"nodeType":"276","messageId":"277","endLine":90,"endColumn":33},{"ruleId":"269","severity":1,"message":"278","line":102,"column":35,"nodeType":"271","messageId":"272","endLine":102,"endColumn":43},{"ruleId":"269","severity":1,"message":"279","line":102,"column":45,"nodeType":"271","messageId":"272","endLine":102,"endColumn":52},{"ruleId":"269","severity":1,"message":"280","line":68,"column":9,"nodeType":"271","messageId":"272","endLine":68,"endColumn":16},{"ruleId":"269","severity":1,"message":"270","line":1,"column":17,"nodeType":"271","messageId":"272","endLine":1,"endColumn":26},{"ruleId":"269","severity":1,"message":"273","line":15,"column":8,"nodeType":"271","messageId":"272","endLine":15,"endColumn":13},{"ruleId":"269","severity":1,"message":"281","line":22,"column":21,"nodeType":"271","messageId":"272","endLine":22,"endColumn":33},{"ruleId":"269","severity":1,"message":"282","line":23,"column":25,"nodeType":"271","messageId":"272","endLine":23,"endColumn":41},{"ruleId":"269","severity":1,"message":"283","line":24,"column":17,"nodeType":"271","messageId":"272","endLine":24,"endColumn":25},{"ruleId":"269","severity":1,"message":"284","line":25,"column":17,"nodeType":"271","messageId":"272","endLine":25,"endColumn":25},{"ruleId":"269","severity":1,"message":"280","line":27,"column":9,"nodeType":"271","messageId":"272","endLine":27,"endColumn":16},{"ruleId":"269","severity":1,"message":"270","line":1,"column":17,"nodeType":"271","messageId":"272","endLine":1,"endColumn":26},{"ruleId":"269","severity":1,"message":"285","line":8,"column":8,"nodeType":"271","messageId":"272","endLine":8,"endColumn":26},{"ruleId":"269","severity":1,"message":"286","line":9,"column":8,"nodeType":"271","messageId":"272","endLine":9,"endColumn":20},{"ruleId":"269","severity":1,"message":"273","line":24,"column":8,"nodeType":"271","messageId":"272","endLine":24,"endColumn":13},{"ruleId":"269","severity":1,"message":"287","line":31,"column":24,"nodeType":"271","messageId":"272","endLine":31,"endColumn":39},{"ruleId":"269","severity":1,"message":"288","line":32,"column":21,"nodeType":"271","messageId":"272","endLine":32,"endColumn":33},{"ruleId":"269","severity":1,"message":"289","line":34,"column":20,"nodeType":"271","messageId":"272","endLine":34,"endColumn":30},{"ruleId":"269","severity":1,"message":"290","line":35,"column":20,"nodeType":"271","messageId":"272","endLine":35,"endColumn":31},{"ruleId":"269","severity":1,"message":"270","line":1,"column":17,"nodeType":"271","messageId":"272","endLine":1,"endColumn":26},{"ruleId":"269","severity":1,"message":"286","line":9,"column":8,"nodeType":"271","messageId":"272","endLine":9,"endColumn":20},{"ruleId":"269","severity":1,"message":"273","line":15,"column":8,"nodeType":"271","messageId":"272","endLine":15,"endColumn":13},{"ruleId":"269","severity":1,"message":"291","line":22,"column":18,"nodeType":"271","messageId":"272","endLine":22,"endColumn":27},{"ruleId":"269","severity":1,"message":"292","line":23,"column":16,"nodeType":"271","messageId":"272","endLine":23,"endColumn":23},{"ruleId":"269","severity":1,"message":"293","line":24,"column":14,"nodeType":"271","messageId":"272","endLine":24,"endColumn":19},{"ruleId":"269","severity":1,"message":"280","line":26,"column":9,"nodeType":"271","messageId":"272","endLine":26,"endColumn":16},{"ruleId":"269","severity":1,"message":"294","line":12,"column":21,"nodeType":"271","messageId":"272","endLine":12,"endColumn":27},{"ruleId":"269","severity":1,"message":"295","line":16,"column":8,"nodeType":"271","messageId":"272","endLine":16,"endColumn":17},{"ruleId":"269","severity":1,"message":"296","line":8,"column":8,"nodeType":"271","messageId":"272","endLine":8,"endColumn":17},{"ruleId":"269","severity":1,"message":"297","line":11,"column":8,"nodeType":"271","messageId":"272","endLine":11,"endColumn":18},{"ruleId":"269","severity":1,"message":"298","line":12,"column":8,"nodeType":"271","messageId":"272","endLine":12,"endColumn":20},{"ruleId":"269","severity":1,"message":"278","line":30,"column":23,"nodeType":"271","messageId":"272","endLine":30,"endColumn":31},{"ruleId":"269","severity":1,"message":"279","line":30,"column":33,"nodeType":"271","messageId":"272","endLine":30,"endColumn":40},{"ruleId":"269","severity":1,"message":"270","line":1,"column":16,"nodeType":"271","messageId":"272","endLine":1,"endColumn":25},{"ruleId":"269","severity":1,"message":"273","line":19,"column":8,"nodeType":"271","messageId":"272","endLine":19,"endColumn":13},{"ruleId":"299","severity":1,"message":"300","line":51,"column":39,"nodeType":"301","messageId":"302","endLine":51,"endColumn":41},{"ruleId":"299","severity":1,"message":"300","line":83,"column":40,"nodeType":"301","messageId":"302","endLine":83,"endColumn":42},{"ruleId":"299","severity":1,"message":"300","line":96,"column":40,"nodeType":"301","messageId":"302","endLine":96,"endColumn":42},{"ruleId":"265","replacedBy":"303"},{"ruleId":"267","replacedBy":"304"},"no-native-reassign",["305"],"no-negated-in-lhs",["306"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'location' is assigned a value but never used.","'history' is assigned a value but never used.","'classes' is assigned a value but never used.","'setClothings' is assigned a value but never used.","'setHomeAppliance' is assigned a value but never used.","'setShoes' is assigned a value but never used.","'setFoods' is assigned a value but never used.","'DesktopWindowsIcon' is defined but never used.","'ExplicitIcon' is defined but never used.","'setProductCount' is assigned a value but never used.","'setPostCount' is assigned a value but never used.","'setSaleLog' is assigned a value but never used.","'setUserLogs' is assigned a value but never used.","'setNotice' is assigned a value but never used.","'setFree' is assigned a value but never used.","'setQa' is assigned a value but never used.","'Button' is defined but never used.","'PropTypes' is defined but never used.","'BuildIcon' is defined but never used.","'AddBoxIcon' is defined but never used.","'ViewListIcon' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["305"],["306"],"no-global-assign","no-unsafe-negation"]